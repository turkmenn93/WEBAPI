// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UdemyWEBAPI.Data;

namespace UdemyWEBAPI.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UdemyWEBAPI.Data.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Elektronik"
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Giyim"
                        });
                });

            modelBuilder.Entity("UdemyWEBAPI.Data.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("categoryId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("categoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateDate = new DateTime(2022, 8, 24, 12, 6, 13, 158, DateTimeKind.Local).AddTicks(405),
                            Price = 15000m,
                            ProductName = "Bilgisayar",
                            Stock = 300,
                            categoryId = 1
                        },
                        new
                        {
                            ID = 2,
                            CreateDate = new DateTime(2022, 7, 28, 12, 6, 13, 158, DateTimeKind.Local).AddTicks(1633),
                            Price = 10000m,
                            ProductName = "Telefon",
                            Stock = 500,
                            categoryId = 1
                        },
                        new
                        {
                            ID = 3,
                            CreateDate = new DateTime(2022, 6, 28, 12, 6, 13, 158, DateTimeKind.Local).AddTicks(1642),
                            Price = 100m,
                            ProductName = "Klavye",
                            Stock = 1000,
                            categoryId = 2
                        });
                });

            modelBuilder.Entity("UdemyWEBAPI.Data.Product", b =>
                {
                    b.HasOne("UdemyWEBAPI.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("categoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("UdemyWEBAPI.Data.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
